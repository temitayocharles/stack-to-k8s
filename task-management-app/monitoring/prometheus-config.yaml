apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - /etc/prometheus/rules/*.yml

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093

    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: 'task-management-backend'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
            regex: backend
            action: keep
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            regex: 8080
            action: keep
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
        metrics_path: /metrics
        scrape_interval: 15s

      - job_name: 'task-management-frontend'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
            regex: frontend
            action: keep
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            regex: 80
            action: keep
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
        metrics_path: /metrics
        scrape_interval: 30s

      - job_name: 'postgresql'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: postgres
            action: keep
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            regex: 5432
            action: keep
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
        metrics_path: /metrics
        scrape_interval: 30s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
  labels:
    app: prometheus
data:
  task-management-alerts.yml: |
    groups:
      - name: task-management
        rules:
          - alert: TaskManagementBackendDown
            expr: up{job="task-management-backend"} == 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Task Management Backend is down"
              description: "Task Management Backend has been down for more than 5 minutes."

          - alert: TaskManagementFrontendDown
            expr: up{job="task-management-frontend"} == 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Task Management Frontend is down"
              description: "Task Management Frontend has been down for more than 5 minutes."

          - alert: TaskManagementHighCPU
            expr: rate(container_cpu_usage_seconds_total{pod=~"task-management-.*"}[5m]) > 0.8
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage in Task Management"
              description: "CPU usage is above 80% for more than 10 minutes."

          - alert: TaskManagementHighMemory
            expr: container_memory_usage_bytes{pod=~"task-management-.*"} / container_spec_memory_limit_bytes > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage in Task Management"
              description: "Memory usage is above 90% for more than 5 minutes."

          - alert: TaskManagementDatabaseConnectionError
            expr: increase(postgres_connection_errors_total[5m]) > 5
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Database connection errors"
              description: "PostgreSQL has experienced connection errors."

          - alert: TaskManagementAPIHighLatency
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="task-management-backend"}[5m])) > 2
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High API latency"
              description: "95th percentile API response time is above 2 seconds."

          - alert: TaskManagementPodRestarts
            expr: increase(kube_pod_container_status_restarts_total{namespace="task-management"}[10m]) > 3
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Pod restarts detected"
              description: "Pods in task-management namespace are restarting frequently."