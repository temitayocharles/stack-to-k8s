apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: medical-care-system
  labels:
    app: prometheus
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      # Medical Care API Monitoring
      - job_name: 'medical-care-api'
        static_configs:
          - targets: ['medical-care-api:80']
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 10s
        
      # Frontend Monitoring
      - job_name: 'medical-care-frontend'
        static_configs:
          - targets: ['medical-care-frontend:80']
        metrics_path: /metrics
        scrape_interval: 30s
        
      # Database Monitoring
      - job_name: 'postgresql'
        static_configs:
          - targets: ['postgresql:5432']
        metrics_path: /metrics
        scrape_interval: 30s
        
      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
          
      # Medical Care System Pods
      - job_name: 'medical-care-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
          
      # Node Exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'node-exporter'
          action: keep
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: medical-care-system
  labels:
    app: prometheus
    component: alerting
data:
  medical-care-alerts.yml: |
    groups:
    - name: medical-care-system.rules
      rules:
      # High Priority Medical Alerts
      - alert: MedicalCareAPIDown
        expr: up{job="medical-care-api"} == 0
        for: 1m
        labels:
          severity: critical
          service: medical-care-api
          tier: backend
        annotations:
          summary: "Medical Care API is down"
          description: "Medical Care API has been down for more than 1 minute. Patient care services affected."
          
      - alert: DatabaseConnectionFailure
        expr: up{job="postgresql"} == 0
        for: 2m
        labels:
          severity: critical
          service: postgresql
          tier: database
        annotations:
          summary: "Medical database is unreachable"
          description: "PostgreSQL database has been unreachable for more than 2 minutes. All medical services affected."
          
      - alert: HighAPIResponseTime
        expr: http_request_duration_seconds{quantile="0.95",job="medical-care-api"} > 2
        for: 5m
        labels:
          severity: warning
          service: medical-care-api
          tier: performance
        annotations:
          summary: "High API response time detected"
          description: "95th percentile response time is {{ $value }}s for more than 5 minutes."
          
      - alert: HighErrorRate
        expr: rate(http_requests_total{job="medical-care-api",status=~"5.."}[5m]) > 0.1
        for: 3m
        labels:
          severity: critical
          service: medical-care-api
          tier: reliability
        annotations:
          summary: "High error rate in Medical Care API"
          description: "Error rate is {{ $value }} requests/second for more than 3 minutes."
          
      - alert: PodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total{namespace="medical-care-system"}[15m]) > 0
        for: 5m
        labels:
          severity: warning
          service: kubernetes
          tier: infrastructure
        annotations:
          summary: "Pod {{ $labels.pod }} is crash looping"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is restarting frequently."
          
      - alert: HighMemoryUsage
        expr: (container_memory_usage_bytes{namespace="medical-care-system"} / container_spec_memory_limit_bytes) > 0.8
        for: 10m
        labels:
          severity: warning
          service: kubernetes
          tier: resources
        annotations:
          summary: "High memory usage detected"
          description: "Container {{ $labels.container }} is using {{ $value | humanizePercentage }} of memory limit."
          
      - alert: DiskSpaceLow
        expr: (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) < 0.2
        for: 10m
        labels:
          severity: warning
          service: infrastructure
          tier: storage
        annotations:
          summary: "Low disk space"
          description: "Disk space is below 20% on {{ $labels.instance }}."
          
      # Healthcare Specific Alerts
      - alert: PatientDataAccessFailure
        expr: rate(http_requests_total{job="medical-care-api",endpoint="/api/patients",status=~"5.."}[5m]) > 0.05
        for: 2m
        labels:
          severity: critical
          service: patient-data
          tier: healthcare
        annotations:
          summary: "Patient data access failing"
          description: "Patient data endpoint is failing at {{ $value }} requests/second."
          
      - alert: TelemedicineServiceDown
        expr: rate(http_requests_total{job="medical-care-api",endpoint="/api/telemedicine",status=~"5.."}[5m]) > 0.1
        for: 1m
        labels:
          severity: critical
          service: telemedicine
          tier: healthcare
        annotations:
          summary: "Telemedicine service experiencing failures"
          description: "Telemedicine service is failing at {{ $value }} requests/second."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: medical-care-system
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        ports:
        - containerPort: 9090
          name: prometheus
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=7d'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-rules
          mountPath: /etc/prometheus/rules/
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-rules
        configMap:
          name: prometheus-rules
      - name: prometheus-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: medical-care-system
  labels:
    app: prometheus
    component: monitoring
spec:
  selector:
    app: prometheus
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
  type: ClusterIP