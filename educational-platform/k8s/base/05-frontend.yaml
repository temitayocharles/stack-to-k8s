apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: educational-platform
  labels:
    app: frontend
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/name: educational-platform
        app.kubernetes.io/component: frontend
    spec:
      containers:
      - name: frontend
        image: educational-platform/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: API_URL
          value: "http://backend-service:8080"
        - name: WS_URL
          value: "ws://backend-service:8080"
        - name: PRODUCTION
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PRODUCTION
        - name: ENABLE_NOTIFICATIONS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENABLE_NOTIFICATIONS
        - name: ENABLE_CHAT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENABLE_CHAT
        - name: ENABLE_VIDEO_CALL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENABLE_VIDEO_CALL
        - name: ENABLE_ANALYTICS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENABLE_ANALYTICS
        - name: ENABLE_DARK_MODE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENABLE_DARK_MODE
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - SETGID
            - SETUID
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - frontend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: educational-platform
  labels:
    app: frontend
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: frontend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: educational-platform
  labels:
    app: frontend
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
