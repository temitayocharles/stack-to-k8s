apiVersion: v1
kind: Namespace
metadata:
  name: educational-platform
  labels:
    name: educational-platform
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: educational-platform
  labels:
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: config
data:
  # Database Configuration
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "educational_platform"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Spring Boot Configuration
  SPRING_PROFILES_ACTIVE: "kubernetes"
  SERVER_PORT: "8080"
  
  # JWT Configuration
  JWT_EXPIRATION: "86400000"
  JWT_REFRESH_EXPIRATION: "604800000"
  
  # File Upload Configuration
  SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: "10MB"
  SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: "10MB"
  
  # CORS Configuration
  CORS_ALLOWED_ORIGINS: "http://localhost:4200,https://edu-platform.example.com"
  
  # Logging Configuration
  LOGGING_LEVEL_COM_EDUPLATFORM: "INFO"
  LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: "WARN"
  
  # Cache Configuration
  SPRING_CACHE_TYPE: "redis"
  
  # JPA Configuration
  SPRING_JPA_HIBERNATE_DDL_AUTO: "validate"
  SPRING_JPA_SHOW_SQL: "false"
  
  # Angular Environment Configuration
  API_URL: "http://backend-service:8080"
  WS_URL: "ws://backend-service:8080"
  PRODUCTION: "true"
  ENABLE_NOTIFICATIONS: "true"
  ENABLE_CHAT: "true"
  ENABLE_VIDEO_CALL: "true"
  ENABLE_ANALYTICS: "true"
  ENABLE_DARK_MODE: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: educational-platform
  labels:
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Database credentials (base64 encoded)
  POSTGRES_USER: ZWR1X3VzZXI=  # edu_user
  POSTGRES_PASSWORD: ZWR1X3Bhc3N3b3Jk  # edu_password
  
  # Redis password (base64 encoded)
  REDIS_PASSWORD: cmVkaXNfcGFzc3dvcmQ=  # redis_password
  
  # JWT Secret (base64 encoded - replace with actual secret)
  JWT_SECRET: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS1mb3ItcHJvZHVjdGlvbi11c2UtMjU2LWJpdC1rZXk=
  
  # Email configuration (base64 encoded - replace with actual values)
  MAIL_USERNAME: bWFpbEBleGFtcGxlLmNvbQ==  # mail@example.com
  MAIL_PASSWORD: bWFpbF9wYXNzd29yZA==  # mail_password
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: educational-platform
  labels:
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: educational-platform
  labels:
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: educational-platform
  labels:
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: backend
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
