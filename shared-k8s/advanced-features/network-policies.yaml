# Network Policies for Zero-Trust Security
# Micro-segmentation and service isolation

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: educational-platform-network-policy
  namespace: educational-platform
spec:
  podSelector:
    matchLabels:
      app: educational-platform
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: educational-frontend
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - podSelector:
        matchLabels:
          app: educational-backend
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS outbound

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: medical-care-network-policy
  namespace: medical-care
spec:
  podSelector:
    matchLabels:
      app: medical-care
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: medical-frontend
    ports:
    - protocol: TCP
      port: 5170
  - from:
    - podSelector:
        matchLabels:
          app: medical-backend
    ports:
    - protocol: TCP
      port: 1433  # SQL Server
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app: sqlserver
    ports:
    - protocol: TCP
      port: 1433
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: weather-app-network-policy
  namespace: weather-app
spec:
  podSelector:
    matchLabels:
      app: weather-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: weather-frontend
    ports:
    - protocol: TCP
      port: 5002
  - from:
    - podSelector:
        matchLabels:
          app: weather-backend
    ports:
    - protocol: TCP
      port: 6379  # Redis
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80   # Weather API calls

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: task-management-network-policy
  namespace: task-management
spec:
  podSelector:
    matchLabels:
      app: task-management
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: task-frontend
    ports:
    - protocol: TCP
      port: 8082
  - from:
    - podSelector:
        matchLabels:
          app: task-backend
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# Default Deny All Policy for Maximum Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Monitoring Namespace Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-policy
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 9090  # Prometheus
    - protocol: TCP
      port: 3000  # Grafana
    - protocol: TCP
      port: 9093  # AlertManager
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 5170
    - protocol: TCP
      port: 5002
    - protocol: TCP
      port: 8082