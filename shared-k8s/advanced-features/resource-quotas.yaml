# Resource Quotas and Limits
# Namespace-level resource management and workload prioritization

apiVersion: v1
kind: ResourceQuota
metadata:
  name: educational-platform-quota
  namespace: educational-platform
spec:
  hard:
    # Compute Resources
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    
    # Object Counts
    pods: "20"
    replicationcontrollers: "5"
    services: "10"
    secrets: "15"
    configmaps: "20"
    persistentvolumeclaims: "5"
    
    # Storage
    requests.storage: "50Gi"
    
    # Network
    services.loadbalancers: "2"
    services.nodeports: "5"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: educational-platform-limits
  namespace: educational-platform
spec:
  limits:
  - default:
      cpu: "1"
      memory: "2Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    max:
      cpu: "2"
      memory: "4Gi"
    min:
      cpu: "50m"
      memory: "128Mi"
    type: Container
  - default:
      storage: "10Gi"
    max:
      storage: "20Gi"
    min:
      storage: "1Gi"
    type: PersistentVolumeClaim

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: medical-care-quota
  namespace: medical-care
spec:
  hard:
    requests.cpu: "3"
    requests.memory: 6Gi
    limits.cpu: "6"
    limits.memory: 12Gi
    pods: "15"
    services: "8"
    secrets: "12"
    configmaps: "15"
    persistentvolumeclaims: "3"
    requests.storage: "30Gi"
    services.loadbalancers: "1"
    services.nodeports: "3"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: medical-care-limits
  namespace: medical-care
spec:
  limits:
  - default:
      cpu: "800m"
      memory: "1.5Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    max:
      cpu: "1.5"
      memory: "3Gi"
    min:
      cpu: "50m"
      memory: "128Mi"
    type: Container

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: weather-app-quota
  namespace: weather-app
spec:
  hard:
    requests.cpu: "2"
    requests.memory: 4Gi
    limits.cpu: "4"
    limits.memory: 8Gi
    pods: "12"
    services: "6"
    secrets: "10"
    configmaps: "12"
    persistentvolumeclaims: "2"
    requests.storage: "20Gi"
    services.loadbalancers: "1"
    services.nodeports: "2"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: weather-app-limits
  namespace: weather-app
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    max:
      cpu: "1"
      memory: "2Gi"
    min:
      cpu: "50m"
      memory: "128Mi"
    type: Container

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: task-management-quota
  namespace: task-management
spec:
  hard:
    requests.cpu: "6"
    requests.memory: 12Gi
    limits.cpu: "12"
    limits.memory: 24Gi
    pods: "30"
    services: "15"
    secrets: "20"
    configmaps: "25"
    persistentvolumeclaims: "8"
    requests.storage: "80Gi"
    services.loadbalancers: "3"
    services.nodeports: "8"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: task-management-limits
  namespace: task-management
spec:
  limits:
  - default:
      cpu: "1.5"
      memory: "3Gi"
    defaultRequest:
      cpu: "200m"
      memory: "512Mi"
    max:
      cpu: "3"
      memory: "6Gi"
    min:
      cpu: "100m"
      memory: "256Mi"
    type: Container

---
# Monitoring Namespace Resource Management
apiVersion: v1
kind: ResourceQuota
metadata:
  name: monitoring-quota
  namespace: monitoring
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    pods: "25"
    services: "10"
    secrets: "15"
    configmaps: "20"
    persistentvolumeclaims: "5"
    requests.storage: "100Gi"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: monitoring-limits
  namespace: monitoring
spec:
  limits:
  - default:
      cpu: "1"
      memory: "2Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    max:
      cpu: "2"
      memory: "4Gi"
    min:
      cpu: "50m"
      memory: "128Mi"
    type: Container

---
# Priority Classes for Workload Prioritization
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: critical-priority
value: 1000
globalDefault: false
description: "Critical workloads that must be scheduled first"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority
value: 800
globalDefault: false
description: "High priority workloads for production applications"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: medium-priority
value: 500
globalDefault: true
description: "Default priority for most workloads"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: low-priority
value: 200
globalDefault: false
description: "Low priority for batch jobs and background tasks"