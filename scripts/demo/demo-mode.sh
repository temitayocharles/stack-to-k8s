#!/bin/bash
# üéÆ DEMO MODE - Interactive Learning Experience
# Guided walkthrough of platform capabilities with real demonstrations

set -euo pipefail

# Colors and styling
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly RED='\033[0;31m'
readonly PURPLE='\033[0;35m'
readonly CYAN='\033[0;36m'
readonly BOLD='\033[1m'
readonly NC='\033[0m'

# Configuration
readonly DEMO_APP="ecommerce-app"
readonly DEMO_TIMEOUT=30

cleanup_demo() {
    echo -e "\n${YELLOW}üßπ Cleaning up demo environment...${NC}"
    cd "$DEMO_APP" 2>/dev/null || return
    docker-compose down -v --remove-orphans 2>/dev/null || true
    cd ..
}

trap cleanup_demo EXIT

show_banner() {
    clear
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${CYAN}‚ïë${NC} ${BOLD}üéÆ KUBERNETES LEARNING PLATFORM - DEMO MODE${NC}"
    echo -e "${CYAN}‚ïë${NC} ${BLUE}Interactive walkthrough of world-class DevOps learning${NC}"
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

wait_for_user() {
    local message="${1:-Press ENTER to continue...}"
    echo -e "\n${CYAN}$message${NC}"
    read -r
}

show_platform_overview() {
    show_banner
    echo -e "${PURPLE}üåü Welcome to the Ultimate Kubernetes Learning Platform!${NC}"
    echo ""
    echo -e "${BLUE}What makes this platform special:${NC}"
    echo "   üéØ 6 Real-world applications (not toy examples)"
    echo "   üìà Progressive difficulty levels (Beginner ‚Üí Expert)"
    echo "   üîß Complete DevOps toolchain"
    echo "   ‚òÅÔ∏è  Multi-cloud deployment strategies"
    echo "   üîí Enterprise-grade security practices"
    echo "   üìä Full observability stack"
    echo "   üí• Chaos engineering scenarios"
    echo "   üöÄ Advanced Kubernetes features"
    echo ""
    echo -e "${GREEN}üéì By the end, you'll have production-ready DevOps skills${NC}"
    
    wait_for_user
}

show_applications() {
    show_banner
    echo -e "${PURPLE}üèóÔ∏è  REAL-WORLD APPLICATIONS${NC}"
    echo ""
    echo -e "${BLUE}Choose from 6 production-ready applications:${NC}"
    echo ""
    echo "üõí ${BOLD}E-commerce Platform${NC} - Complete shopping solution"
    echo "   ‚Ä¢ Node.js + React + MongoDB"
    echo "   ‚Ä¢ Payment integration, inventory management"
    echo "   ‚Ä¢ Perfect for beginners"
    echo ""
    echo "üéì ${BOLD}Educational Platform${NC} - Online learning system"
    echo "   ‚Ä¢ Java Spring Boot + Angular + PostgreSQL"
    echo "   ‚Ä¢ Video streaming, real-time collaboration"
    echo "   ‚Ä¢ Great for intermediate learners"
    echo ""
    echo "üè• ${BOLD}Medical Care System${NC} - Healthcare management"
    echo "   ‚Ä¢ .NET Core + Blazor + SQL Server"
    echo "   ‚Ä¢ HIPAA compliance, real-time monitoring"
    echo "   ‚Ä¢ Advanced security focus"
    echo ""
    echo "üìã ${BOLD}Task Management${NC} - Project coordination"
    echo "   ‚Ä¢ Go + Svelte + CouchDB"
    echo "   ‚Ä¢ Real-time updates, team collaboration"
    echo "   ‚Ä¢ Microservices architecture"
    echo ""
    echo "üå§Ô∏è  ${BOLD}Weather Service${NC} - Meteorological platform"
    echo "   ‚Ä¢ Python Flask + Vue.js + Redis"
    echo "   ‚Ä¢ API integrations, data processing"
    echo "   ‚Ä¢ Great for data-focused learning"
    echo ""
    echo "üì± ${BOLD}Social Media Platform${NC} - Community network"
    echo "   ‚Ä¢ Ruby on Rails + React Native Web"
    echo "   ‚Ä¢ Real-time messaging, content moderation"
    echo "   ‚Ä¢ Expert-level complexity"
    
    wait_for_user
}

show_difficulty_levels() {
    show_banner
    echo -e "${PURPLE}üìä PROGRESSIVE DIFFICULTY SYSTEM${NC}"
    echo ""
    echo -e "${GREEN}üü¢ LEVEL 1: BEGINNER (Foundation Building)${NC}"
    echo "   ‚Ä¢ Container basics with Docker Compose"
    echo "   ‚Ä¢ Simple Kubernetes deployments"
    echo "   ‚Ä¢ Basic monitoring setup"
    echo "   ‚Ä¢ Guided secret management"
    echo "   ‚Ä¢ Estimated time: 2-4 weeks"
    echo ""
    echo -e "${YELLOW}üü° LEVEL 2: INTERMEDIATE (Skill Development)${NC}"
    echo "   ‚Ä¢ Advanced Kubernetes features"
    echo "   ‚Ä¢ CI/CD pipeline implementation"
    echo "   ‚Ä¢ Infrastructure as Code"
    echo "   ‚Ä¢ Security scanning and hardening"
    echo "   ‚Ä¢ Estimated time: 4-8 weeks"
    echo ""
    echo -e "${BLUE}üîµ LEVEL 3: ADVANCED (Mastery Building)${NC}"
    echo "   ‚Ä¢ Multi-cloud deployments"
    echo "   ‚Ä¢ Service mesh implementation"
    echo "   ‚Ä¢ Advanced monitoring and alerting"
    echo "   ‚Ä¢ Chaos engineering"
    echo "   ‚Ä¢ Estimated time: 8-12 weeks"
    echo ""
    echo -e "${RED}üî¥ LEVEL 4: EXPERT (Production Ready)${NC}"
    echo "   ‚Ä¢ Enterprise architecture patterns"
    echo "   ‚Ä¢ Compliance and governance"
    echo "   ‚Ä¢ Performance optimization"
    echo "   ‚Ä¢ Disaster recovery planning"
    echo "   ‚Ä¢ Estimated time: 12+ weeks"
    
    wait_for_user
}

demo_application() {
    show_banner
    echo -e "${PURPLE}üöÄ LIVE APPLICATION DEMONSTRATION${NC}"
    echo ""
    echo -e "${BLUE}Let's see a real application in action!${NC}"
    echo "We'll quickly deploy the e-commerce app to show you what's possible."
    echo ""
    
    wait_for_user "Ready to see some magic? Press ENTER..."
    
    echo -e "${YELLOW}üìÅ Entering application directory...${NC}"
    cd "$DEMO_APP" || {
        echo -e "${RED}‚ùå Demo application not found!${NC}"
        return 1
    }
    
    echo -e "${YELLOW}üê≥ Starting application containers...${NC}"
    echo "   This will take 30-60 seconds..."
    
    if timeout $DEMO_TIMEOUT docker-compose up -d 2>/dev/null; then
        sleep 5
        
        echo -e "${GREEN}‚úÖ Application started successfully!${NC}"
        echo ""
        echo -e "${CYAN}üåê Application URLs:${NC}"
        echo "   ‚Ä¢ Frontend: http://localhost:3000"
        echo "   ‚Ä¢ Backend API: http://localhost:5000"
        echo "   ‚Ä¢ Admin Panel: http://localhost:3000/admin"
        echo ""
        
        # Test the application
        echo -e "${YELLOW}üß™ Testing application health...${NC}"
        
        if curl -s "http://localhost:5000/health" > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Backend API is responding!${NC}"
        else
            echo -e "${YELLOW}‚è≥ Backend still starting up...${NC}"
        fi
        
        if curl -s "http://localhost:3000" > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Frontend is serving content!${NC}"
        else
            echo -e "${YELLOW}‚è≥ Frontend still starting up...${NC}"
        fi
        
        echo ""
        echo -e "${GREEN}üéâ Demo application is running!${NC}"
        echo -e "${BLUE}üí° This is just the beginning - imagine this deployed to Kubernetes!${NC}"
        
    else
        echo -e "${RED}‚ùå Demo timed out. Don't worry - this happens sometimes!${NC}"
        echo -e "${BLUE}üí° The full setup process is more reliable with proper timing.${NC}"
    fi
    
    cd ..
    wait_for_user "Press ENTER to continue the demo..."
}

show_learning_paths() {
    show_banner
    echo -e "${PURPLE}üõ§Ô∏è  PERSONALIZED LEARNING PATHS${NC}"
    echo ""
    echo -e "${BLUE}Choose your adventure based on your goals:${NC}"
    echo ""
    echo -e "${GREEN}üéØ Path 1: CONTAINER MASTERY${NC}"
    echo "   Start with: E-commerce app"
    echo "   Focus: Docker, Docker Compose, basic orchestration"
    echo "   Duration: 2-3 weeks"
    echo "   Perfect for: Complete beginners"
    echo ""
    echo -e "${YELLOW}üéØ Path 2: KUBERNETES SPECIALIST${NC}"
    echo "   Start with: Task Management app"
    echo "   Focus: Advanced Kubernetes, service mesh, monitoring"
    echo "   Duration: 6-8 weeks"
    echo "   Perfect for: DevOps engineers"
    echo ""
    echo -e "${BLUE}üéØ Path 3: SECURITY EXPERT${NC}"
    echo "   Start with: Medical Care system"
    echo "   Focus: Security scanning, compliance, hardening"
    echo "   Duration: 8-10 weeks"
    echo "   Perfect for: Security professionals"
    echo ""
    echo -e "${RED}üéØ Path 4: PLATFORM ENGINEER${NC}"
    echo "   Start with: Social Media platform"
    echo "   Focus: Multi-cloud, chaos engineering, scalability"
    echo "   Duration: 12+ weeks"
    echo "   Perfect for: Senior engineers"
    
    wait_for_user
}

show_features() {
    show_banner
    echo -e "${PURPLE}üî• ADVANCED FEATURES PREVIEW${NC}"
    echo ""
    echo -e "${BLUE}What you'll master on this platform:${NC}"
    echo ""
    echo "üê≥ ${BOLD}Containerization${NC}"
    echo "   ‚Ä¢ Multi-stage Dockerfiles"
    echo "   ‚Ä¢ Container optimization"
    echo "   ‚Ä¢ Security scanning"
    echo ""
    echo "‚ò∏Ô∏è  ${BOLD}Kubernetes Mastery${NC}"
    echo "   ‚Ä¢ Deployments, Services, Ingress"
    echo "   ‚Ä¢ ConfigMaps, Secrets, Volumes"
    echo "   ‚Ä¢ HPA, Network Policies, RBAC"
    echo ""
    echo "üîÑ ${BOLD}CI/CD Pipelines${NC}"
    echo "   ‚Ä¢ GitHub Actions workflows"
    echo "   ‚Ä¢ Jenkins pipelines"
    echo "   ‚Ä¢ GitLab CI configurations"
    echo ""
    echo "üìä ${BOLD}Observability Stack${NC}"
    echo "   ‚Ä¢ Prometheus + Grafana"
    echo "   ‚Ä¢ Logging with ELK/Loki"
    echo "   ‚Ä¢ Distributed tracing"
    echo ""
    echo "‚òÅÔ∏è  ${BOLD}Cloud Deployment${NC}"
    echo "   ‚Ä¢ AWS EKS"
    echo "   ‚Ä¢ Azure AKS"
    echo "   ‚Ä¢ Google GKE"
    echo ""
    echo "üí• ${BOLD}Chaos Engineering${NC}"
    echo "   ‚Ä¢ Failure injection"
    echo "   ‚Ä¢ Resilience testing"
    echo "   ‚Ä¢ Disaster recovery"
    
    wait_for_user
}

show_next_steps() {
    show_banner
    echo -e "${PURPLE}üöÄ READY TO START YOUR JOURNEY?${NC}"
    echo ""
    echo -e "${BLUE}Here's how to begin:${NC}"
    echo ""
    echo -e "${GREEN}1. üìã Choose Your Path${NC}"
    echo "   ‚Ä¢ Review the applications in the main README"
    echo "   ‚Ä¢ Select based on your experience level"
    echo "   ‚Ä¢ Consider your learning goals"
    echo ""
    echo -e "${GREEN}2. üîß Environment Setup${NC}"
    echo "   ‚Ä¢ Run: ./scripts/setup/smart-system-optimizer.sh"
    echo "   ‚Ä¢ Or follow manual setup in docs/setup/"
    echo ""
    echo -e "${GREEN}3. üéØ Start Learning${NC}"
    echo "   ‚Ä¢ Follow the application-specific guides"
    echo "   ‚Ä¢ Practice with real scenarios"
    echo "   ‚Ä¢ Progress through difficulty levels"
    echo ""
    echo -e "${GREEN}4. üèÜ Master Advanced Topics${NC}"
    echo "   ‚Ä¢ Implement monitoring and observability"
    echo "   ‚Ä¢ Practice chaos engineering"
    echo "   ‚Ä¢ Deploy to production environments"
    echo ""
    echo -e "${CYAN}üí° Pro Tips:${NC}"
    echo "   ‚Ä¢ Start with validation: ./scripts/validation/validate-setup.sh"
    echo "   ‚Ä¢ Join our community for support"
    echo "   ‚Ä¢ Practice regularly for best results"
    echo ""
    echo -e "${YELLOW}üéâ You're about to become a DevOps expert!${NC}"
}

# Main demo flow
main() {
    show_platform_overview
    show_applications
    show_difficulty_levels
    show_learning_paths
    demo_application
    show_features
    show_next_steps
    
    cleanup_demo
    
    echo ""
    echo -e "${GREEN}üéä Demo complete! Welcome to your DevOps learning journey!${NC}"
    echo ""
    echo -e "${CYAN}Next steps:${NC}"
    echo "   1. ./scripts/validation/validate-setup.sh"
    echo "   2. Choose an application from the README"
    echo "   3. Start with the GET-STARTED.md guide"
    echo ""
    echo -e "${PURPLE}Happy learning! üöÄ${NC}"
}

main "$@"